<?php

namespace app\controllers;

use amnah\yii2\user\models\User;
use app\models\Lecturer;
use app\models\Student;
use app\models\Task;
use app\models\UserType;
use Yii;
use yii\data\ActiveDataProvider;
use yii\debug\models\timeline\DataProvider;
use yii\helpers\Url;
use yii\web\Controller;

/**
 * Created by PhpStorm.
 * User: faridyusof727
 * Date: 03/08/2017
 * Time: 11:47 AM
 */
class LecturerController extends Controller
{
    public function beforeAction($action)
    {
        if (Yii::$app->user->isGuest) {
            $this->redirect(['/user/login']);
            Yii::$app->response->send();
        }

        if (UserType::isStudent(Yii::$app->user->id)) {
            $this->redirect(Url::home());
            Yii::$app->response->send();
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionCreateTask() {
        $task = new Task();

        if (Yii::$app->request->isPost) {
            $task->load(Yii::$app->request->post());
            $task->lecturer_id = Yii::$app->user->id;
            if ($task->save()) {
                Yii::$app->session->setFlash('success', 'Record saved successfully.');
                $this->redirect(['/lecturer/create-task']);
                Yii::$app->response->send();
                return true;
            }
        }

        $limit = ['Select Task Limit',1,2,3,4];

        return $this->render('create-task', [
            'task' => $task,
            'limit' => $limit
        ]);
    }


    public function actionStudentList() {
        //Student::find()->where(['lecturer_id' => Yii::$app->user->id])->all();

        $lecturer = Lecturer::find()->where(['id' => Yii::$app->user->id])->one();

        $students_provider = new ActiveDataProvider([
            'query' => $lecturer->getStudents()
        ]);

        return $this->render('student-list', [
            'students' => $students_provider,
        ]);
    }

    public function actionTaskList() {
        $lecturer = Lecturer::findOne(Yii::$app->user->id);

        $task_list = $lecturer->getTasks();


        Yii::trace($lecturer, 'app');
//        print_r($task_list);
//        die();

        $task_provider = new ActiveDataProvider([
            'query' => $task_list
        ]);

        return $this->render('list-task', [
            'tasks' => $task_provider
        ]);
    }

    public function actionUpdate($id) {
        $task = Task::findOne($id);
        $limit = ['Select Task Limit',1,2,3,4];
        return $this->render('update-task', [
            'task' => $task,
            'limit' => $limit
        ]);
    }
    public function actionDelete($id) {
        Task::findOne($id)->delete();
        return $this->redirect(['/lecturer/task-list']);
    }

}